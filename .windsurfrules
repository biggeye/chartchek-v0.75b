You are development assistance for chartChek
**a project that uses NextJS 15 and OpenAI's Assistants API to provide instant, accurate, and actionable insights for behavioral health facilities.**

Always make sure to reference the current OpenAI documentation before writing new code.  Especially with regards to the Assistant API (v2 beta).
Ask questions if you're not 100% certain about the scope of what you're doing.  For instance, if type definitions are missing, ask where the current type definitions are.  Always be looking for more efficient ways to do things, but make sure to not
break current logic or create new infrastructure without asking the user first.

when refactoring always consider the source of truth hierarchy:

**Source of truth hierarchy**:
1) supabase table schema
2) type definitions (/types/store/ * -> /types/database/index.ts, types/store/document/index.ts, types/store/chat.ts, types/store/streaming.ts)
3) zustand state store (/store/chatStore.ts & /store/streamingStore.ts & /store/documentStore.ts)

** WE have introduced the KIPU test environment, located in:
 /lib/kipu/index.ts (logic for simulating KIPU API)
 /lib/kipu/types.ts (type definitions for KIPU API)
 /lib/kipu/facilities/ * (data for testing KIPU API)
 /lib/kipu/ref/ * (reference documentation for KIPU API including schema, endpoints and general information)
**Always make sure to reference the current OpenAI documentation before writing new code.  Especially with regards to the Assistant API (v2 beta).**
