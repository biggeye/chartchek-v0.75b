{
    "patient_evaluations-endpoint_specifications": {
      "version": "0.1",
      "last_updated": "2025-03-24",
      "endpoints": [
        {
          "name": "patient_evaluations",
          "path": "/api/kipu/patient_evaluations",
          "method": "GET",
          "description": "Lists evaluations for patients based on query parameters",
          "kipu_mapping": {
            "endpoint": "/api/patient_evaluations",
            "method": "GET",
            "terminology_mapping": {
              "evaluation_id": "evaluation_id",
              "patient_process_id": "patient_process_id"
            }
          },
          "request": {
            "query_parameters": [
              {
                "name": "evaluation_id",
                "type": "string",
                "required": false,
                "description": "Filter by specific evaluation ID"
              },
              {
                "name": "completed_only",
                "type": "boolean",
                "required": false,
                "default": false,
                "description": "Only return completed evaluations"
              },
              {
                "name": "current_census_only",
                "type": "boolean",
                "required": false,
                "default": false,
                "description": "Only return evaluations for current census"
              },
              {
                "name": "start_date",
                "type": "string",
                "required": false,
                "description": "Filter evaluations from this date (ISO format)"
              },
              {
                "name": "end_date",
                "type": "string",
                "required": false,
                "description": "Filter evaluations until this date (ISO format)"
              },
              {
                "name": "include_stranded",
                "type": "boolean",
                "required": false,
                "default": false,
                "description": "Include stranded evaluations"
              },
              {
                "name": "page",
                "type": "string",
                "required": false,
                "default": "1",
                "description": "Page number for pagination"
              },
              {
                "name": "per",
                "type": "string",
                "required": false,
                "default": "20",
                "description": "Number of results per page"
              },
              {
                "name": "patient_process_id",
                "type": "string",
                "required": false,
                "description": "Filter by patient process ID"
              },
              {
                "name": "evaluation_content",
                "type": "string",
                "required": false,
                "description": "Filter by evaluation content"
              },
              {
                "name": "patientId",
                "type": "string",
                "required": false,
                "description": "Filter by patient ID (format: chartId:patientMasterId)"
              }
            ]
          },
          "response": {
            "success": {
              "status_code": 200,
              "content_type": "application/json",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "string",
                    "patient_id": "string",
                    "evaluation_type": "string",
                    "status": "string",
                    "created_at": "string",
                    "updated_at": "string"
                  }
                }
              }
            },
            "error": {
              "status_codes": [400, 401, 403, 500],
              "schema": {
                "type": "object",
                "properties": {
                  "error": "string",
                  "message": "string",
                  "details": "object (optional)"
                }
              }
            }
          },
          "authentication": {
            "required": true,
            "type": "Supabase session + KIPU API credentials"
          },
          "integration": {
            "service_layer": {
              "function": "kipuListEvaluations",
              "file_path": "/lib/kipu/service/evaluation-service.ts"
            },
            "store_integration": {
              "store_file": "/store/patient.ts",
              "actions": [
                "fetchPatientEvaluationsFromAPI",
                "fetchPatientEvaluations"
              ],
              "state_properties": [
                "patientEvaluations",
                "patientEvaluationsLoading",
                "patientEvaluationsError"
              ]
            },
            "nextjs_implementation": {
              "api_route": "/app/api/kipu/patient_evaluations/route.ts",
              "client_components": [
                "/components/patients/evaluations/EvaluationsList.tsx",
                "/components/patients/evaluations/EvaluationCard.tsx"
              ]
            }
          }
        },
        {
          "name": "patient_evaluation_by_id",
          "path": "/api/kipu/patient_evaluations/{id}",
          "method": "GET",
          "description": "Retrieves a specific patient evaluation by ID",
          "kipu_mapping": {
            "endpoint": "/api/patient_evaluations/{id}",
            "method": "GET"
          },
          "request": {
            "path_parameters": [
              {
                "name": "id",
                "type": "string",
                "required": true,
                "description": "Evaluation ID to retrieve"
              }
            ]
          },
          "response": {
            "success": {
              "status_code": 200,
              "content_type": "application/json",
              "schema": {
                "type": "object",
                "properties": {
                  "id": "string",
                  "patient_id": "string",
                  "evaluation_type": "string",
                  "status": "string",
                  "created_at": "string",
                  "updated_at": "string",
                  "content": "object",
                  "metadata": "object"
                }
              }
            },
            "error": {
              "status_codes": [400, 401, 403, 404, 500],
              "schema": {
                "type": "object",
                "properties": {
                  "error": "string",
                  "message": "string",
                  "details": "object (optional)"
                }
              }
            }
          },
          "authentication": {
            "required": true,
            "type": "Supabase session + KIPU API credentials"
          },
          "integration": {
            "service_layer": {
              "function": "kipuGetEvaluation",
              "file_path": "/lib/kipu/service/evaluation-service.ts"
            },
            "store_integration": {
              "store_file": "/store/patient.ts",
              "actions": [
                "fetchPatientEvaluationFromAPI",
                "fetchPatientEvaluation"
              ],
              "state_properties": [
                "selectedEvaluation",
                "selectedEvaluationLoading",
                "selectedEvaluationError"
              ]
            },
            "nextjs_implementation": {
              "api_route": "/app/api/kipu/patient_evaluations/[id]/route.ts",
              "client_components": [
                "/components/patients/evaluations/EvaluationDetail.tsx"
              ]
            }
          }
        }
      ]
    },
    "architecture_notes": [
      "Patient evaluations follow the standard layered architecture pattern: UI → Store → API → Service",
      "The KIPU API paths include the '/api/' prefix when used with kipuServerGet function",
      "Authentication follows a user-centric model where each user has one set of credentials for all facilities",
      "The patientId parameter uses the composite format 'chartId:patientMasterId' and requires proper parsing",
      "All API routes validate authentication via Supabase session before proceeding"
    ]
  }