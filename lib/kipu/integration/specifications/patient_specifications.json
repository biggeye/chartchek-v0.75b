{
  "endpoint_specifications": {
    "version": "0.1",
    "last_updated": "2025-03-14",
    "endpoints": [
      {
        "name": "patients",
        "path": "/api/kipu/patients",
        "method": "GET",
        "description": "Lists all patients for a specific facility",
        "kipu_mapping": {
          "endpoint": "/api/patients",
          "method": "GET",
          "terminology_mapping": {
            "facility_id": "location_id",
            "casefile_id": "casefile_id"
          }
        },
        "request": {
          "query_parameters": [
            {
              "name": "facility_id",
              "type": "string",
              "required": true,
              "description": "ID of the facility to list patients for"
            },
            {
              "name": "page",
              "type": "integer",
              "required": false,
              "default": 1,
              "description": "Page number for pagination"
            },
            {
              "name": "limit",
              "type": "integer",
              "required": false,
              "default": 20,
              "description": "Number of patients per page"
            },
            {
              "name": "status",
              "type": "string",
              "required": false,
              "enum": ["active", "discharged", "all"],
              "default": "active",
              "description": "Filter patients by status"
            },
            {
              "name": "search",
              "type": "string",
              "required": false,
              "description": "Search term to filter patients by name, MR number, or other identifiers"
            },
            {
              "name": "sort",
              "type": "string",
              "required": false,
              "enum": ["name_asc", "name_desc", "admission_date_asc", "admission_date_desc"],
              "default": "name_asc",
              "description": "Sort order for patients"
            }
          ],
          "headers": [
            {
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication"
            }
          ]
        },
        "response": {
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "patients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the patient in our system"
                    },
                    "casefile_id": {
                      "type": "string",
                      "description": "KIPU casefile identifier",
                      "pattern": "^[0-9]+\\:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "Patient's first name"
                    },
                    "middle_name": {
                      "type": "string",
                      "description": "Patient's middle name"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "Patient's last name"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "Patient's full name"
                    },
                    "dob": {
                      "type": "string",
                      "format": "date",
                      "description": "Patient's date of birth"
                    },
                    "age": {
                      "type": "integer",
                      "description": "Patient's age in years"
                    },
                    "admission_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date when the patient was admitted"
                    },
                    "discharge_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date when the patient was discharged (if applicable)"
                    },
                    "mr_number": {
                      "type": "string",
                      "description": "Medical record number"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["active", "discharged", "pending"],
                      "description": "Current status of the patient"
                    },
                    "facility_id": {
                      "type": "string",
                      "description": "ID of the facility where the patient is located"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "evaluations_count": {
                          "type": "integer",
                          "description": "Number of evaluations for this patient"
                        },
                        "documents_count": {
                          "type": "integer",
                          "description": "Number of documents for this patient"
                        }
                      }
                    }
                  },
                  "required": ["id", "casefile_id", "first_name", "last_name", "dob", "admission_date", "mr_number", "facility_id", "status"]
                }
              },
              "pagination": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of patients"
                  },
                  "page": {
                    "type": "integer",
                    "description": "Current page number"
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Number of patients per page"
                  },
                  "pages": {
                    "type": "integer",
                    "description": "Total number of pages"
                  }
                },
                "required": ["total", "page", "limit", "pages"]
              },
              "filters": {
                "type": "object",
                "properties": {
                  "facility_id": {
                    "type": "string",
                    "description": "Facility ID filter applied"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status filter applied"
                  },
                  "search": {
                    "type": "string",
                    "description": "Search term applied"
                  }
                }
              }
            },
            "required": ["patients", "pagination"]
          },
          "example": {
            "patients": [
              {
                "id": "patient_1",
                "casefile_id": "12345:a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                "first_name": "John",
                "middle_name": "Robert",
                "last_name": "Doe",
                "full_name": "John Robert Doe",
                "dob": "1980-05-15",
                "age": 45,
                "admission_date": "2025-01-10",
                "discharge_date": null,
                "mr_number": "MR12345",
                "status": "active",
                "facility_id": "facility_1",
                "meta": {
                  "evaluations_count": 5,
                  "documents_count": 12
                }
              },
              {
                "id": "patient_2",
                "casefile_id": "12346:b2c3d4e5-f6g7-8901-bcde-f23456789012",
                "first_name": "Jane",
                "middle_name": "",
                "last_name": "Smith",
                "full_name": "Jane Smith",
                "dob": "1975-08-22",
                "age": 50,
                "admission_date": "2025-02-05",
                "discharge_date": null,
                "mr_number": "MR12346",
                "status": "active",
                "facility_id": "facility_1",
                "meta": {
                  "evaluations_count": 3,
                  "documents_count": 8
                }
              }
            ],
            "pagination": {
              "total": 125,
              "page": 1,
              "limit": 20,
              "pages": 7
            },
            "filters": {
              "facility_id": "facility_1",
              "status": "active",
              "search": ""
            }
          }
        },
        "error_responses": [
          {
            "status_code": 401,
            "description": "Unauthorized - Invalid or missing authentication token",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid or missing authentication token"
                }
              }
            }
          },
          {
            "status_code": 403,
            "description": "Forbidden - User does not have access to this facility",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "message": {
                  "type": "string",
                  "example": "You do not have access to this facility"
                }
              }
            }
          },
          {
            "status_code": 404,
            "description": "Not Found - Facility not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Facility not found"
                }
              }
            }
          },
          {
            "status_code": 500,
            "description": "Internal Server Error - Server error occurred",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                }
              }
            }
          }
        ],
        "implementation_details": {
          "caching": {
            "strategy": "Cache patient list for 5 minutes",
            "invalidation_triggers": [
              "Patient creation",
              "Patient update",
              "Patient discharge"
            ]
          },
          "fallback": {
            "strategy": "Use local JSON mock data if KIPU API is unavailable",
            "implementation": "Check for API error and fallback to mock data in /lib/kipu/mocks/patients.json"
          },
          "zustand_integration": {
            "store": "patientStore",
            "actions": [
              "fetchPatients",
              "setPatientFilters",
              "setPaginationParams"
            ],
            "state_properties": [
              "patients",
              "patientsLoading",
              "patientsPagination",
              "patientsFilters",
              "patientsError"
            ]
          },
          "nextjs_implementation": {
            "api_route": "/app/api/kipu/facilities/[facility_id]/patients/route.ts",
            "client_components": [
              "/components/patients/PatientsList.tsx",
              "/components/patients/PatientsTable.tsx",
              "/components/patients/PatientFilters.tsx"
            ]
          }
        }
      },
      {
        "name": "patient",
        "path": "/api/kipu/patients/{patient_id}",
        "method": "GET",
        "description": "Get detailed information about a specific patient",
        "kipu_mapping": {
          "endpoint": "/api/patients/{casefile_id}",
          "method": "GET",
          "terminology_mapping": {
            "patient_id": "casefile_id"
          },
          "required_parameters": {
            "app_id": "string",
            "location_id": "string",
            "phi_level": "high",
            "patient_master_id": "string"
          }
        },
        "request": {
          "path_parameters": [
            {
              "name": "patient_id",
              "type": "string",
              "required": true,
              "description": "ID of the patient to retrieve"
            }
          ],
          "headers": [
            {
              "name": "Authorization",
              "type": "string",
              "required": true,
              "description": "Bearer token for authentication"
            }
          ]
        },
        "response": {
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the patient in our system"
              },
              "casefile_id": {
                "type": "string",
                "description": "KIPU casefile identifier",
                "pattern": "^[0-9]+\\:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
              },
              "first_name": {
                "type": "string",
                "description": "Patient's first name"
              },
              "middle_name": {
                "type": "string",
                "description": "Patient's middle name"
              },
              "last_name": {
                "type": "string",
                "description": "Patient's last name"
              },
              "full_name": {
                "type": "string",
                "description": "Patient's full name"
              },
              "dob": {
                "type": "string",
                "format": "date",
                "description": "Patient's date of birth"
              },
              "age": {
                "type": "integer",
                "description": "Patient's age in years"
              },
              "gender": {
                "type": "string",
                "description": "Patient's gender"
              },
              "admission_date": {
                "type": "string",
                "format": "date",
                "description": "Date when the patient was admitted"
              },
              "discharge_date": {
                "type": "string",
                "format": "date",
                "description": "Date when the patient was discharged (if applicable)"
              },
              "mr_number": {
                "type": "string",
                "description": "Medical record number"
              },
              "status": {
                "type": "string",
                "enum": ["active", "discharged", "pending"],
                "description": "Current status of the patient"
              },
              "facility_id": {
                "type": "string",
                "description": "ID of the facility where the patient is located"
              },
              "facility_name": {
                "type": "string",
                "description": "Name of the facility where the patient is located"
              },
              "building": {
                "type": "string",
                "description": "Building where the patient is located"
              },
              "bed": {
                "type": "string",
                "description": "Bed assigned to the patient"
              },
              "contact_info": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "Patient's phone number"
                  },
                  "email": {
                    "type": "string",
                    "description": "Patient's email address"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "description": "Street address"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "state": {
                        "type": "string",
                        "description": "State/Province"
                      },
                      "zip": {
                        "type": "string",
                        "description": "ZIP/Postal code"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      }
                    }
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Insurance provider name"
                  },
                  "policy_number": {
                    "type": "string",
                    "description": "Insurance policy number"
                  },
                  "group_number": {
                    "type": "string",
                    "description": "Insurance group number"
                  },
                  "coverage_start_date": {
                    "type": "string",
                    "format": "date",
                    "description": "When insurance coverage started"
                  },
                  "coverage_end_date": {
                    "type": "string",
                    "format": "date",
                    "description": "When insurance coverage ends"
                  }
                }
              },
              "emergency_contact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of emergency contact"
                  },
                  "relationship": {
                    "type": "string",
                    "description": "Relationship to patient"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of emergency contact"
                  }
                }
              },
              "diagnoses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Diagnosis code"
                    },
                    "description": {
                      "type": "string",
                      "description": "Diagnosis description"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of diagnosis"
                    },
                    "is_primary": {
                      "type": "boolean",
                      "description": "Whether this is the primary diagnosis"
                    }
                  }
                }
              },
              "allergies": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "substance": {
                      "type": "string",
                      "description": "Allergen substance"
                    },
                    "reaction": {
                      "type": "string",
                      "description": "Allergic reaction"
                    },
                    "severity": {
                      "type": "string",
                      "enum": ["mild", "moderate", "severe"],
                      "description": "Severity of the allergic reaction"
                    }
                  }
                }
              },
              "medications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Medication name"
                    },
                    "dosage": {
                      "type": "string",
                      "description": "Medication dosage"
                    },
                    "frequency": {
                      "type": "string",
                      "description": "Medication frequency"
                    },
                    "start_date": {
                      "type": "string",
                      "format": "date",
                      "description": "When medication was started"
                    },
                    "end_date": {
                      "type": "string",
                      "format": "date",
                      "description": "When medication ends (if applicable)"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["active", "discontinued", "completed"],
                      "description": "Status of the medication"
                    }
                  }
                }
              },
              "meta": {
                "type": "object",
                "properties": {
                  "evaluations_count": {
                    "type": "integer",
                    "description": "Number of evaluations for this patient"
                  },
                  "documents_count": {
                    "type": "integer",
                    "description": "Number of documents for this patient"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the patient record was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the patient record was last updated"
                  }
                }
              }
            },
            "required": ["id", "casefile_id", "first_name", "last_name", "dob", "admission_date", "mr_number", "facility_id", "status"]
          },
          "example": {
            "id": "patient_1",
            "casefile_id": "12345:a1b2c3d4-e5f6-7890-abcd-ef1234567890",
            "first_name": "John",
            "middle_name": "Robert",
            "last_name": "Doe",
            "full_name": "John Robert Doe",
            "dob": "1980-05-15",
            "age": 45,
            "gender": "Male",
            "admission_date": "2025-01-10",
            "discharge_date": null,
            "mr_number": "MR12345",
            "status": "active",
            "facility_id": "facility_1",
            "facility_name": "Main Treatment Center",
            "building": "Main Building",
            "bed": "Room 101-A",
            "contact_info": {
              "phone": "555-123-4567",
              "email": "john.doe@example.com",
              "address": {
                "street": "123 Main St",
                "city": "Anytown",
                "state": "CA",
                "zip": "12345",
                "country": "USA"
              }
            },
            "insurance": {
              "provider": "Health Insurance Co",
              "policy_number": "POL-123456",
              "group_number": "GRP-789",
              "coverage_start_date": "2025-01-01",
              "coverage_end_date": "2025-12-31"
            },
            "emergency_contact": {
              "name": "Jane Doe",
              "relationship": "Spouse",
              "phone": "555-987-6543"
            },
            "diagnoses": [
              {
                "code": "F10.20",
                "description": "Alcohol dependence, uncomplicated",
                "date": "2025-01-10",
                "is_primary": true
              },
              {
                "code": "F32.1",
                "description": "Major depressive disorder, single episode, moderate",
                "date": "2025-01-12",
                "is_primary": false
              }
            ],
            "allergies": [
              {
                "substance": "Penicillin",
                "reaction": "Rash",
                "severity": "moderate"
              }
            ],
            "medications": [
              {
                "name": "Sertraline",
                "dosage": "50mg",
                "frequency": "Once daily",
                "start_date": "2025-01-15",
                "end_date": null,
                "status": "active"
              }
            ],
            "meta": {
              "evaluations_count": 5,
              "documents_count": 12,
              "created_at": "2025-01-10T14:30:00Z",
              "updated_at": "2025-03-05T09:15:22Z"
            }
          }
        },
        "error_responses": [
          {
            "status_code": 401,
            "description": "Unauthorized - Invalid or missing authentication token",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid or missing authentication token"
                }
              }
            }
          },
          {
            "status_code": 403,
            "description": "Forbidden - User does not have access to this patient",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "message": {
                  "type": "string",
                  "example": "You do not have access to this patient"
                }
              }
            }
          },
          {
            "status_code": 404,
            "description": "Not Found - Patient not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Patient not found"
                }
              }
            }
          },
          {
            "status_code": 500,
            "description": "Internal Server Error - Server error occurred",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                }
              }
            }
          }
        ],
        "implementation_details": {
          "caching": {
            "strategy": "Cache patient details for 10 minutes",
            "invalidation_triggers": [
              "Patient update",
              "Patient discharge"
            ]
          },
          "fallback": {
            "strategy": "Use local JSON mock data if KIPU API is unavailable",
            "implementation": "Check for API error and fallback to mock data in /lib/kipu/mocks/patient_details.json"
          },
          "zustand_integration": {
            "store": "patientStore",
            "actions": [
              "fetchPatientById",
              "clearSelectedPatient"
            ],
            "state_properties": [
              "selectedPatient",
              "selectedPatientLoading",
              "selectedPatientError"
            ]
          },
          "nextjs_implementation": {
            "api_route": "/app/api/kipu/facilities/[facility_id]/patients/[patient_id]/route.ts",
            "client_components": [
              "/components/patients/PatientDetail.tsx",
              "/components/patients/PatientHeader.tsx",
              "/components/patients/PatientTabs.tsx"
            ]
          }
        }
      }
    ]
  }
}
